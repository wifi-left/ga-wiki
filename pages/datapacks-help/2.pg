上一期：Minecraft 制作数据包教程（No.1）——配置环境

放在前面的话
如果您还没有配置好开发环境，您可以去看上一期。

您需要准备这些东西：

1.一台电脑

2.Minecraft Java 版

3.一个脑子和一双手（哈哈）

好的，正文开始。


第一步：
打开开发工具，VSCode。

在需要创建数据包的地方新建一个文件夹。

在VSCode中打开此文件夹。

方法为：菜单“文件” - “打开文件夹”

打开后，在目录内新建文件，pack.mcmeta：

（示例：）

{
    "pack": {
        "pack_format": 6,
        "description": "The default data for Minecraft"
    }
}
{

    "pack":{

        "pack_format":6, //按照MC版本号填写（当然不是当前版本号的MC也能加载，只是会有警告

        "description":"The default data for Minecraft" //名称，例如我这里写的 “The default data for Minecraft”

    }

}



//请注意这些用“//”注释的文本请去掉。



新建目录data

在“data”中新建一个你喜欢的名字的文件夹（如果需要覆盖原版内容请使用minecraft）

但要保证只有英文、数字和下划线（和用户名一样哦）

请保证：

如果要打包为ZIP文件，那么在数据包内不存在中文名称文件！

（因为我之前就吃过亏）

（要问是什么原因，原因就是因为 java ZIP 解压函数的BUG）



新建完毕后就会像这样：



VScode中的代码展示
下面是目录的结构

pack.mcmeta

pack.png

data

advancements

functions

loot_tables

predicates

structures

recipes

item_modifiers

tags

dimension_type

dimension

worldgen

biome

configured_carver

configured_feature

configured_structure_feature

configured_surface_builder

noise_settings

processor_list

template_pool

可能看的有点云里雾里。整体下来大概长这样（导入了原版数据后）

数据包结构
advancements

进度

（没错就是按下L出现的画面）

functions

函数（/function），（其实就是命令组）

loot_tables

战利品表（这个不推荐手写，实在太麻烦）

生成器 ： https://mc.ganxiaozhe.com/mc/tool/loottable.html

predicates

战利品表谓词名称（其实就是更高级的条件，支持选择器、execute调用）

structures

结构

后缀为.nbt

（建筑党：嗯？怎么这么熟悉？这不就是结构方块生成的嘛？）

没错，就是结构方块生成的文件。在地图内的structures文件夹内（默认保存位置）

recipes

配方（其实就是自定义合成辣！）

item_modifiers

物品修饰器（我也没接触过awa）

是1.17快照新增加的。

（Wiki原话：物品修饰器可用于在/item命令内为物品附加战利品表函数。）

tags

标签（你可以通过在选择器中调用，例如：/kill @e[type=#a]，#代表标签）

拥有特殊标签的生物、方块等会有特殊作用。

方块可以在fill 中 replace 后面 以及 物品NBT中的 CanDestroy 与 CanPlaceOn 中使用

（顺便说一声，这个可以套娃哦）

然后function加载需要在这个目录下的functions目录（需要自己新建）中的load.json中输入。

重复执行需要添加tick.json

dimension_type

维度类型（1.16新增加的，目前paper与bukkit不支持）

dimension

维度（一样的1.16）

worldgen

生物群系类型（也一样是1.16）

那么，写好了，如何加载呢？
打开游戏，把文件夹（pack.mcmeta文件目录的上一级）复制进地图内的datapacks文件夹内，输入/reload重新加载后会默认加载。用/datapack可以禁用、启用、列举当前使用的数据包。（需要OP等级为3，及单人模式OP等级）


感谢您的收看。

下期我会讲到一些基本的指令，以及老指令与新指令如何迁移。